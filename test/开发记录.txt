###### 第一次更新：完成商品表的CRUD

###### 第二次更新：优化GoodModel的上传和缩略和删除硬盘上的图片

###### 第三次更新 ： 完成品牌表的CRUD，并将品牌与商品建立一对多的关系

###### 第四次更新 完成商品表与会员等级间多对多关系，并在会员价格增加外键绑定商品表，使得商品删除后对应的会员价格同时删除并添加了商品加入回收站功能

###### 第五次更新 完成分类表的CRUD,添加无限级分类功能，修改分类时不能是自己和qi子类，删除分类时同时删除其所有子类，并关联上商品表，在商品列表中添加分类搜索功能，当搜索商品的该类或其子类时，商品都会被搜索到

###### 第六次更新 一个商品在正常情况下，不会只有一个分类 如：一个化妆品，可用是个人护理栏目下，也可以属于美妆栏目，所以扩展分类就应运而生：添加扩展分类表 关联商品表和分类表，实现多对多关系，在商品增加和编辑时添加扩展分类并在商品列表显示，并在商品列表页重新修改分类搜索的功能，将扩展分类也考虑进去	

###### 第七次更新 在数据库增加商品相册表，并在商品的CRUD中添加了商品相册的CRUD，实现了多文件上传功能和ajax删除相册图片

###### 第八次更新 ： 在数据库增加类型表，属性表，完成类型和属性一对多的关系和CURD，并在商品和属性间建立多对多关系的中间表：商品属性表，在商品的CURD中关联上类型表和属性表，完成商品属性表的CRUD；完成主要功能：在添加商品时加入商品类型，用ajax获取该类型下所有的属性；在修改商品时列出已经存在的属性：并可以在修改页面用ajax删除商品的单个属性和添加更多属性，本想修改时直接把商品属性表清空再重新添加，因考虑到后面的库存表的记录，所以通过筛选哪些属性是新增，哪些属性是修改来实现该商品的商品属性修改

###### 第九次更新 ：在数据库增加库存量表,并关联商品属性表,为每个商品的可选属性排列组合分别添加库存量：如衣服的可选属性颜色和尺码的搭配，白色的M码，白色的L码，黑色的M码...分别添加库存,完成商品库存的CRUD；
```
效果如下:
+----------+--------------+---------------+
| goods_id | goods_number | goods_attr_id |
+----------+--------------+---------------+
|       18 |          100 | 12,15         |
|       18 |          123 | 12,16         |
|       18 |          221 | 12,17         |
|       18 |          223 | 13,15         |
|       18 |          341 | 13,16         |
|       18 |          432 | 13,17         |
|       18 |          843 | 14,15         |
|       18 |          154 | 14,16         |
|       18 |          673 | 14,17         |

```

###### 第十次更新：在数据库新增权限表,角色表，管理员表，角色权限中间表，管理员角色表，完成RBAC权限控制功能！ 


###### 第十一次更新 ：让登陆的管理员只能看到属于自己的权限模块，实现动态加载
```
效果如下:

<foreach name='btns' item='val' >
<li class="explode" key="02_cat_and_goods" name="menu">
{$val.auth_name}
	<ul>
	    <?php foreach($val['children'] as $k=>$v):?>
	    <li class="menu-item">
	      <a href="{:U($v['module_name'] . '/' . $v['controller_name']. '/' .$v['action_name'])}" target="main-frame">
	        <?php echo $v['auth_name']?>
	        
	      </a>
	    </li>
	  <?php endforeach?>
	</ul>
</li>
</foreach>

```